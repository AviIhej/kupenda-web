{"ast":null,"code":"import _slicedToArray from \"/Users/aviihej/Desktop/kupenda-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/aviihej/Desktop/kupenda-website/src/Components/Form/Form.js\";\nimport React, { useState, useCallback } from 'react';\nimport * as firebase from \"firebase/app\"; // // Your web app's Firebase configuration\n// let firebaseConfig = {\n//   apiKey: \"AIzaSyCQ71RZQMKvE-xJy6UJy528NLveOrPZ_jw\",\n//   authDomain: \"kupenda-user-data.firebaseapp.com\",\n//   databaseURL: \"https://kupenda-user-data.firebaseio.com\",\n//   projectId: \"kupenda-user-data\",\n//   storageBucket: \"kupenda-user-data.appspot.com\",\n//   messagingSenderId: \"225421781946\",\n//   appId: \"1:225421781946:web:0e244aaf4d0ce9dbc20b83\",\n//   measurementId: \"G-LGGKPN8B2Q\"\n// };\n// // Initialize Firebase\n// firebase.initializeApp(firebaseConfig);\n// firebase.analytics();\n\nfunction Form() {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        status = _useState4[0],\n        setStatus = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        email = _useState6[0],\n        setEmail = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        message = _useState8[0],\n        setMessage = _useState8[1]; // const [file, setFile] = useState({});\n  // const onDrop = useCallback(acceptedFiles => {\n  //   console.log(acceptedFiles)\n  //   setFile(acceptedFiles[0])\n  // }, [])\n  // const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\n\n\n  const encode = data => {\n    const formData = new FormData();\n    Object.keys(data).forEach(k => {\n      formData.append(k, data[k]);\n    });\n    return formData;\n  };\n\n  const handleSubmit = e => {\n    const data = {\n      \"form-name\": \"contact\",\n      name,\n      email,\n      message\n    };\n    fetch(\"/\", {\n      method: \"POST\",\n      // headers: { \"Content-Type\": 'multipart/form-data; boundary=random' },\n      body: encode(data)\n    }).then(() => setStatus(\"Form Submission Successful!!\")).catch(error => setStatus(\"Form Submission Failed!\"));\n    e.preventDefault();\n  };\n\n  const handleChange = e => {\n    const _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n\n    if (name === 'name') {\n      return setName(value);\n    }\n\n    if (name === 'email') {\n      return setEmail(value);\n    }\n\n    if (name === 'message') {\n      return setMessage(value);\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    action: \"/thank-you/\",\n    \"form-name\": \"name\",\n    \"data-netlify\": \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Your Name: \", React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    value: name,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }))), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Your Email: \", React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }))), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Message: \", React.createElement(\"textarea\", {\n    name: \"message\",\n    value: message,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }))), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Send\"))), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, status));\n}\n\nexport default Form;","map":{"version":3,"sources":["/Users/aviihej/Desktop/kupenda-website/src/Components/Form/Form.js"],"names":["React","useState","useCallback","firebase","Form","name","setName","status","setStatus","email","setEmail","message","setMessage","encode","data","formData","FormData","Object","keys","forEach","k","append","handleSubmit","e","fetch","method","body","then","catch","error","preventDefault","handleChange","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useCallback} from 'react';\nimport * as firebase from \"firebase/app\";\n  // // Your web app's Firebase configuration\n  // let firebaseConfig = {\n  //   apiKey: \"AIzaSyCQ71RZQMKvE-xJy6UJy528NLveOrPZ_jw\",\n  //   authDomain: \"kupenda-user-data.firebaseapp.com\",\n  //   databaseURL: \"https://kupenda-user-data.firebaseio.com\",\n  //   projectId: \"kupenda-user-data\",\n  //   storageBucket: \"kupenda-user-data.appspot.com\",\n  //   messagingSenderId: \"225421781946\",\n  //   appId: \"1:225421781946:web:0e244aaf4d0ce9dbc20b83\",\n  //   measurementId: \"G-LGGKPN8B2Q\"\n  // };\n  // // Initialize Firebase\n  // firebase.initializeApp(firebaseConfig);\n  // firebase.analytics();\n\n\nfunction Form() {\n\n\n\n\n  const [name,setName] = useState('');\n  const [status,setStatus] = useState('');\n  const [email,setEmail] = useState('');\n  const [message,setMessage] = useState('');\n  // const [file, setFile] = useState({});\n\n  // const onDrop = useCallback(acceptedFiles => {\n  //   console.log(acceptedFiles)\n  //   setFile(acceptedFiles[0])\n  // }, [])\n  // const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\n\n  const encode = (data) => {\n    const formData = new FormData();\n    Object.keys(data).forEach((k)=>{\n      formData.append(k,data[k])\n    });\n    return formData\n  }\n\n  const handleSubmit = e => {\n    const data = { \"form-name\": \"contact\", name, email, message}\n    \n    fetch(\"/\", {\n      method: \"POST\",\n      // headers: { \"Content-Type\": 'multipart/form-data; boundary=random' },\n      body: encode(data)\n    })\n      .then(() => setStatus(\"Form Submission Successful!!\"))\n      .catch(error => setStatus(\"Form Submission Failed!\"));\n\n    e.preventDefault();\n  };\n\n  const handleChange = e => {\n    const {name, value} = e.target\n    if (name === 'name' ){\n      return setName(value)\n    }\n    if (name === 'email' ){\n      return setEmail(value)\n    }\n    if (name === 'message' ){\n      return setMessage(value)\n    }\n  }\n\n  return (\n    <div className=\"App\">\n    <form onSubmit={handleSubmit} action=\"/thank-you/\" form-name=\"name\" data-netlify=\"true\">\n          <p>\n            <label>\n              Your Name: <input type=\"text\" name=\"name\" value={name} onChange={handleChange} />\n            </label>\n          </p>\n          <p>\n            <label>\n              Your Email: <input type=\"email\" name=\"email\" value={email} onChange={handleChange} />\n            </label>\n          </p>\n          <p>\n            <label>\n              Message: <textarea name=\"message\" value={message} onChange={handleChange} />\n            </label>\n          </p>\n        \n          <p>\n            <button type=\"submit\">Send</button>\n          </p>\n        </form>\n        <h3>{status}</h3>\n    </div>\n  );\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}