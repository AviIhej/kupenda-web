{"ast":null,"code":"var _jsxFileName = \"/Users/aviihej/Desktop/kupenda-website/src/Components/Form/Form.js\";\nimport React, { Component, useState, useCallback } from 'react';\nimport Firebase from 'firebase';\nimport config from '../../config'; // // Your web app's Firebase configuration\n// let firebaseConfig = {\n//   apiKey: \"AIzaSyCQ71RZQMKvE-xJy6UJy528NLveOrPZ_jw\",\n//   authDomain: \"kupenda-user-data.firebaseapp.com\",\n//   databaseURL: \"https://kupenda-user-data.firebaseio.com\",\n//   projectId: \"kupenda-user-data\",\n//   storageBucket: \"kupenda-user-data.appspot.com\",\n//   messagingSenderId: \"225421781946\",\n//   appId: \"1:225421781946:web:0e244aaf4d0ce9dbc20b83\",\n//   measurementId: \"G-LGGKPN8B2Q\"\n// };\n// // Initialize Firebase\n// firebase.initializeApp(firebaseConfig);\n// firebase.analytics();\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n\n    this.writeUserData = () => {\n      Firebase.database().ref('/').set(this.state);\n      console.log('DATA SAVED');\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      let name = this.refs.name.value;\n      let role = this.refs.role.value;\n      let uid = this.refs.uid.value;\n\n      if (uid && name && role) {\n        const developers = this.state.developers;\n        const devIndex = developers.findIndex(data => {\n          return data.uid === uid;\n        });\n        developers[devIndex].name = name;\n        developers[devIndex].role = role;\n        this.setState({\n          developers\n        });\n      } else if (name && role) {\n        const uid = new Date().getTime().toString();\n        const developers = this.state.developers;\n        developers.push({\n          uid,\n          name,\n          role\n        });\n        this.setState({\n          developers\n        });\n      }\n\n      this.refs.name.value = '';\n      this.refs.role.value = '';\n      this.refs.uid.value = '';\n    };\n\n    this.removeData = developer => {\n      const developers = this.state.developers;\n      const newState = developers.filter(data => {\n        return data.uid !== developer.uid;\n      });\n      this.setState({\n        developers: newState\n      });\n    };\n\n    this.updateData = developer => {\n      this.refs.uid.value = developer.uid;\n      this.refs.name.value = developer.name;\n      this.refs.role.value = developer.role;\n    };\n\n    this.state = {\n      developers: []\n    };\n  }\n\n  componentDidUpdate() {// check on previous state\n    // only write when it's different with the new state\n  }\n\n  render() {\n    const developers = this.state.developers;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-xl-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Firebase Development Team\"))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-xl-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, developers.map(developer => React.createElement(\"div\", {\n      key: developer.uid,\n      className: \"card float-left\",\n      style: {\n        width: '18rem',\n        marginRight: '1rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, developer.name), React.createElement(\"p\", {\n      className: \"card-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, developer.role), React.createElement(\"button\", {\n      onClick: () => this.removeData(developer),\n      className: \"btn btn-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Delete\"), React.createElement(\"button\", {\n      onClick: () => this.updateData(developer),\n      className: \"btn btn-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Edit\")))))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-xl-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Add new team member here\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"hidden\",\n      ref: \"uid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"form-group col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      ref: \"name\",\n      className: \"form-control\",\n      placeholder: \"Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Role\"), React.createElement(\"input\", {\n      type: \"text\",\n      ref: \"role\",\n      className: \"form-control\",\n      placeholder: \"Role\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }))), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Save\")))));\n  }\n\n} // const [file, setFile] = useState({});\n// const onDrop = useCallback(acceptedFiles => {\n//   console.log(acceptedFiles)\n//   setFile(acceptedFiles[0])\n// }, [])\n// const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\n// const encode = (data) => {\n//   const formData = new FormData();\n//   Object.keys(data).forEach((k)=>{\n//     formData.append(k,data[k])\n//   });\n//   return formData\n// }\n// const handleSubmit = e => {\n//   const data = { \"form-name\": \"contact\", name, email, message}\n//   fetch(\"/\", {\n//     method: \"POST\",\n//     // headers: { \"Content-Type\": 'multipart/form-data; boundary=random' },\n//     body: encode(data)\n//   })\n//     .then(() => setStatus(\"Form Submission Successful!!\"))\n//     .catch(error => setStatus(\"Form Submission Failed!\"));\n//   e.preventDefault();\n// };\n\n\nexport default Form;","map":{"version":3,"sources":["/Users/aviihej/Desktop/kupenda-website/src/Components/Form/Form.js"],"names":["React","Component","useState","useCallback","Firebase","config","Form","constructor","props","writeUserData","database","ref","set","state","console","log","handleSubmit","event","preventDefault","name","refs","value","role","uid","developers","devIndex","findIndex","data","setState","Date","getTime","toString","push","removeData","developer","newState","filter","updateData","componentDidUpdate","render","map","width","marginRight"],"mappings":"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","sourcesContent":["import React, {Component, useState, useCallback} from 'react';\nimport Firebase from 'firebase';\nimport config from '../../config';\n  // // Your web app's Firebase configuration\n  // let firebaseConfig = {\n  //   apiKey: \"AIzaSyCQ71RZQMKvE-xJy6UJy528NLveOrPZ_jw\",\n  //   authDomain: \"kupenda-user-data.firebaseapp.com\",\n  //   databaseURL: \"https://kupenda-user-data.firebaseio.com\",\n  //   projectId: \"kupenda-user-data\",\n  //   storageBucket: \"kupenda-user-data.appspot.com\",\n  //   messagingSenderId: \"225421781946\",\n  //   appId: \"1:225421781946:web:0e244aaf4d0ce9dbc20b83\",\n  //   measurementId: \"G-LGGKPN8B2Q\"\n  // };\n  // // Initialize Firebase\n  // firebase.initializeApp(firebaseConfig);\n  // firebase.analytics();\n\n\nclass Form extends Component {\n\n  constructor(props){\n    super(props);\n    this.state={\n      developers: []\n    }\n  }\n  \n  writeUserData = () => {\n    Firebase.database().ref('/').set(this.state);\n    console.log('DATA SAVED');\n  }\n\n  componentDidUpdate(){\n      // check on previous state\n    // only write when it's different with the new state\n  }\n\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    let name = this.refs.name.value;\n    let role = this.refs.role.value;\n    let uid = this.refs.uid.value;\n  \n    if (uid && name && role){\n      const { developers } = this.state;\n      const devIndex = developers.findIndex(data => {\n        return data.uid === uid \n      });\n      developers[devIndex].name = name;\n      developers[devIndex].role = role;\n      this.setState({ developers });\n    }\n    else if (name && role ) {\n      const uid = new Date().getTime().toString();\n      const { developers } = this.state;\n      developers.push({ uid, name, role })\n      this.setState({ developers });\n    }\n  \n    this.refs.name.value = '';\n    this.refs.role.value = '';\n    this.refs.uid.value = '';\n  }\n  \n  removeData = (developer) => {\n    const { developers } = this.state;\n    const newState = developers.filter(data => {\n      return data.uid !== developer.uid;\n    });\n    this.setState({ developers: newState });\n  }\n  \n  updateData = (developer) => {\n    this.refs.uid.value = developer.uid;\n    this.refs.name.value = developer.name;\n    this.refs.role.value = developer.role;\n  }\n\n\n  render(){\n\n    const { developers } = this.state;\n    return(\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className='col-xl-12'>\n            <h1>Firebase Development Team</h1>\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col-xl-12'>\n          { \n            developers\n            .map(developer => \n              <div key={developer.uid} className=\"card float-left\" style={{width: '18rem', marginRight: '1rem'}}>\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\">{ developer.name }</h5>\n                  <p className=\"card-text\">{ developer.role }</p>\n                  <button onClick={ () => this.removeData(developer) } className=\"btn btn-link\">Delete</button>\n                  <button onClick={ () => this.updateData(developer) } className=\"btn btn-link\">Edit</button>\n                </div>\n              </div>\n              )\n          } \n          </div>\n        </div>\n        <div className='row'>\n          <div className='col-xl-12'>\n            <h1>Add new team member here</h1>\n            <form onSubmit={ this.handleSubmit }>\n              <div className=\"form-row\">\n                <input type='hidden' ref='uid' />\n                <div className=\"form-group col-md-6\">\n                  <label>Name</label>\n                  <input type=\"text\" ref='name' className=\"form-control\" placeholder=\"Name\" />\n                </div>\n                <div className=\"form-group col-md-6\">\n                  <label>Role</label>\n                  <input type=\"text\" ref='role' className=\"form-control\" placeholder=\"Role\" />\n                </div>\n              </div>\n              <button type=\"submit\" className=\"btn btn-primary\">Save</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\n\n  // const [file, setFile] = useState({});\n\n  // const onDrop = useCallback(acceptedFiles => {\n  //   console.log(acceptedFiles)\n  //   setFile(acceptedFiles[0])\n  // }, [])\n  // const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\n\n  // const encode = (data) => {\n  //   const formData = new FormData();\n  //   Object.keys(data).forEach((k)=>{\n  //     formData.append(k,data[k])\n  //   });\n  //   return formData\n  // }\n\n  // const handleSubmit = e => {\n  //   const data = { \"form-name\": \"contact\", name, email, message}\n    \n  //   fetch(\"/\", {\n  //     method: \"POST\",\n  //     // headers: { \"Content-Type\": 'multipart/form-data; boundary=random' },\n  //     body: encode(data)\n  //   })\n  //     .then(() => setStatus(\"Form Submission Successful!!\"))\n  //     .catch(error => setStatus(\"Form Submission Failed!\"));\n\n  //   e.preventDefault();\n  // };\n\n\n\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}